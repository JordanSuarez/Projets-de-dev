[{"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/index.js":"1","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Login/Login.js":"2","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Dashboard.js":"3","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Users.js":"4","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/authProvider.js":"5","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Tags.js":"6","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Projects.js":"7","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Contacts.js":"8","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Comments.js":"9","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Messages.js":"10"},{"size":306,"mtime":1610731853664,"results":"11","hashOfConfig":"12"},{"size":4367,"mtime":1609749063557,"results":"13","hashOfConfig":"12"},{"size":2637,"mtime":1611216845716,"results":"14","hashOfConfig":"12"},{"size":1661,"mtime":1611216845717,"results":"15","hashOfConfig":"12"},{"size":1278,"mtime":1611216845720,"results":"16","hashOfConfig":"12"},{"size":1137,"mtime":1611216845717,"results":"17","hashOfConfig":"12"},{"size":3886,"mtime":1611216845716,"results":"18","hashOfConfig":"12"},{"size":966,"mtime":1611216845715,"results":"19","hashOfConfig":"12"},{"size":1005,"mtime":1611216845715,"results":"20","hashOfConfig":"12"},{"size":496,"mtime":1611216845716,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"17e5tp9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/index.js",["49"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/Login/Login';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["50","51"],"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Login/Login.js",["52","53"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AUTH_LOGIN } from 'react-admin';\nimport { userLogin } from 'react-admin';\nimport { useLogin, useNotify } from \"react-admin\";\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Projets De Dev\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://github.com/Almigra/Almigra/blob/master/projetsdedev.png?raw=true)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: '#eeeded',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const login = useLogin();\n  const notify = useNotify();\n  const classes = useStyles();\n  const [inputValues, setInputValues] = useState({email: '', password: ''});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(inputValues).catch(() => notify(\"Invalid email or password\"));\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            BackOffice de Projets De Dev\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Adresse Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={inputValues.email}\n              onChange={(e) => setInputValues({...inputValues, email: e.target.value})}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Mot de Passe\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={inputValues.password}\n              onChange={(e) => setInputValues({...inputValues, password: e.target.value})}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Que mon nom résonne pour l'éternité\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              LAISSEZ MOI ENTRER\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  J'ai osé oublier mon mot de passe\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Je suis pas admin\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Dashboard.js",[],"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Users.js",[],"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/authProvider.js",["54"],"import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\nimport { apiUrl } from './Dashboard'\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { email, password } = params;\n        const values = {\n            email: email,\n            password : password\n        }\n        const request = new Request(`${apiUrl}/login`, {\n\t        method: 'POST',\n            body: JSON.stringify( values ),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                localStorage.setItem('token', token);\n            });\n    }\n\n     if (type === AUTH_LOGOUT) {\n      localStorage.removeItem('token');\n      return Promise.resolve();\n      }\n    \n    if (type === AUTH_CHECK) {\n      return localStorage.getItem('token') ? Promise.resolve() : Promise.reject({ redirectTo: '/login' });\n      }\n  return Promise.reject('Unknown method');\n}\n","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Tags.js",["55","56","57"],"import { Create, Edit, SimpleForm, TextInput, List, Datagrid, ImageField, TextField, EditButton, Toolbar, SaveButton, DeleteButton } from 'react-admin';\n\n\nexport const TagList = (props) => {\n    return(\n  <List {...props} bulkActionButtons={false} Set pagination={false} >\n      <Datagrid key=\"id\" >\n          <TextField label=\"ID\" source=\"id\" />\n          <TextField label=\"Nom\" source=\"name\" />\n          <ImageField source=\"image\" sortable={false}/>\n        <EditButton label=\"Modifier\" />\n      </Datagrid>\n  </List>\n)}\n\nexport const TagCreate = (props) => {\n  return (\n    <Create {...props}>\n    <SimpleForm>\n    <TextInput label=\"Nom\" source=\"name\" />\n    </SimpleForm>\n</Create>\n  )\n}\n/*\nconst TagEditToolbar = props => (\n    <Toolbar {...props} >\n        <SaveButton />\n        if(){\n            <DeleteButton />\n        }\n    </Toolbar>\n);\nadd <SimpleForm toolbar={<TagEditToolbar />}> on return for custom toolbar\n*/\nexport const TagEdit = (props, { record }) => {\n    console.log(record);\n  return (\n    <Edit {...props}>\n        <SimpleForm >\n        <TextInput label=\"Nom\" source=\"name\" />\n\n    </SimpleForm>\n</Edit>\n  )\n}\n","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Projects.js",["58","59","60","61","62","63"],"import { Create, Edit, SimpleForm, TextInput, ImageInput, DeleteButton, List, Datagrid, ReferenceInput , SelectInput, ArrayInput, SimpleFormIterator, ImageField, EmailField, UrlField, TextField, ChipField, ArrayField, SingleFieldList, EditButton, ShowButton, fetchUtils, Show, SimpleShowLayout } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RichTextInput from 'ra-input-rich-text';\n\nconst useStyles = makeStyles({\n    tags: { \n      '& :empty' : {\n        display: 'none',\n      }\n  },\n  });\n  \n  export const ProjectList = (props) => {\n      const classes = useStyles();\n      return(\n    <List {...props} bulkActionButtons={false} Set pagination={false} >\n        <Datagrid expand={<TextField name=\"Description\" source=\"description\" />} key=\"id\" \t>\n            <TextField label=\"ID\" source=\"id\" sortBy=\"id\" />\n          \n            <TextField label=\"Auteur\" source=\"user.username\" sortable={false} />\n  \n            <TextField label=\"Titre\" source=\"title\" />\n            <UrlField label=\"Lien Github\" source=\"github_link\" />\n            <UrlField label=\"Lien du Projet\" source=\"project_link\" />\n            <ImageField source=\"image\" />\n            <ArrayField source=\"tags\" sortable={false}>\n               <SingleFieldList key=\"id\">\n                   <ChipField source=\"name\" className={classes.tags}/>\n              </SingleFieldList>\n            </ArrayField>\n          <EditButton label='Modifier' />\n          <DeleteButton label='Supprimer'/>\n        </Datagrid>\n    </List>\n  )}\n  \n  export const ProjectCreate = (props) => {\n    const classes = useStyles();\n    return (\n      <Create {...props} title=\"Créer un Projet\">\n      <SimpleForm>\n          <TextInput label=\"Titre\" source=\"title\" />\n          <TextInput label=\"Lien Github\" source=\"githubLink\" />\n          <TextInput label=\"Lien du Projet\" source=\"projectLink\" />\n          <ImageInput source=\"image\" />\n          <RichTextInput label=\"Description\" source=\"description\" />\n          <ArrayField source=\"tags\">\n             <SingleFieldList key=\"id\" >\n             <ChipField source=\"name\" className={classes.tags}/>\n            </SingleFieldList>\n          </ArrayField>\n      </SimpleForm>\n  </Create>\n    )\n  }\n  \n  export const ProjectEdit = (props) => {\n  \n    const classes = useStyles();\n    const PreviewImage = ({ record, source }) => {\n      if (typeof (record) == \"object\") {\n          record = {\n              [source]: record.src,\n          }\n      }\n  \n      \n      return <ImageField record={record} source={source} />\n    }\n  \n  return (\n      <Edit {...props}>\n      <SimpleForm>\n          <TextInput disabled label=\"Id\" source=\"id\" />\n          <TextInput label=\"Titre\" source=\"title\" key=\"id\" required />\n          <TextInput label=\"Lien Github\" source=\"githubLink\" />\n          <TextInput label=\"Lien du Projet\" source=\"projectLink\" />\n          <RichTextInput label=\"Description\" source=\"description\" />\n          <ImageField label=\"Image actuelle\" source=\"image\" />\n          <ImageInput\n                  source=\"record.src\"\n                  label=\"Nouvelle image\"\n                  accept=\"image/png, image/jpg, image/jpeg\"\n                  maxSize={5000000}\n                  placeholder={\n                    <p>\n                      <span >\n                        Choisir une image\n                      </span>\n                      </p>\n                  }\n                >\n                <PreviewImage source=\"src\" />\n                </ImageInput>\n  \n  \n                <ArrayInput source=\"tags\">\n                  <SimpleFormIterator disableAdd disableRemove >\n                  <ReferenceInput label=\"Tags\" source=\"id\" reference=\"tags\">\n                  <SelectInput optionText=\"name\" />\n                  </ReferenceInput>\n                  </SimpleFormIterator>\n                </ArrayInput>\n  \n      </SimpleForm>\n  </Edit>\n    )\n  }","/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Contacts.js",[],["64","65"],"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Comments.js",[],"/Users/jordansuarez/Documents/projects/Oclock/apotheose/projet-projet-de-dev/backoffice/src/components/Dashboard/Messages.js",[],{"ruleId":"66","severity":1,"message":"67","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":13,"column":10,"nodeType":"68","messageId":"69","endLine":13,"endColumn":20},{"ruleId":"66","severity":1,"message":"75","line":14,"column":10,"nodeType":"68","messageId":"69","endLine":14,"endColumn":19},{"ruleId":"66","severity":1,"message":"76","line":1,"column":35,"nodeType":"68","messageId":"69","endLine":1,"endColumn":45},{"ruleId":"66","severity":1,"message":"77","line":1,"column":98,"nodeType":"68","messageId":"69","endLine":1,"endColumn":105},{"ruleId":"66","severity":1,"message":"78","line":1,"column":107,"nodeType":"68","messageId":"69","endLine":1,"endColumn":117},{"ruleId":"66","severity":1,"message":"79","line":1,"column":119,"nodeType":"68","messageId":"69","endLine":1,"endColumn":131},{"ruleId":"66","severity":1,"message":"80","line":1,"column":163,"nodeType":"68","messageId":"69","endLine":1,"endColumn":173},{"ruleId":"66","severity":1,"message":"81","line":1,"column":248,"nodeType":"68","messageId":"69","endLine":1,"endColumn":258},{"ruleId":"66","severity":1,"message":"82","line":1,"column":260,"nodeType":"68","messageId":"69","endLine":1,"endColumn":270},{"ruleId":"66","severity":1,"message":"83","line":1,"column":272,"nodeType":"68","messageId":"69","endLine":1,"endColumn":276},{"ruleId":"66","severity":1,"message":"84","line":1,"column":278,"nodeType":"68","messageId":"69","endLine":1,"endColumn":294},{"ruleId":"66","severity":1,"message":"85","line":59,"column":11,"nodeType":"68","messageId":"69","endLine":59,"endColumn":18},{"ruleId":"70","replacedBy":"86"},{"ruleId":"72","replacedBy":"87"},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'AUTH_LOGIN' is defined but never used.","'userLogin' is defined but never used.","'AUTH_ERROR' is defined but never used.","'Toolbar' is defined but never used.","'SaveButton' is defined but never used.","'DeleteButton' is defined but never used.","'EmailField' is defined but never used.","'ShowButton' is defined but never used.","'fetchUtils' is defined but never used.","'Show' is defined but never used.","'SimpleShowLayout' is defined but never used.","'classes' is assigned a value but never used.",["88"],["89"],"no-global-assign","no-unsafe-negation"]